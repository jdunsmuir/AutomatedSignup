let seatOrderPreference=[];class HomePage{constructor(){this.maxPages=3,this.arrows={left:document.getElementsByClassName("IconWidget---large")[0],right:document.getElementsByClassName("IconWidget---large")[1]},this.updateActiveSignupButtons()}getSignupButtons(){let buttons=document.getElementsByTagName("button"),signupButtons=[];for(let i=0;i<buttons.length;i++)"SIGN UP"==buttons[i].innerText&&signupButtons.push(buttons[i]);return signupButtons}pressRightArrow(){this.arrows.right.click()}updateActiveSignupButtons(){this.activeSignupButtons=this.getSignupButtons()}pageHasSignUpButtons(){return this.activeSignupButtons.length>0}pressSignUpButton(){for(let i=0;i<this.activeSignupButtons.length;i++){let button=this.activeSignupButtons[i],buttonText;"SIGN UP"==button.innerText&&button.click()}}}class SignUpPage{constructor(seatOrderPreference){this.updateGridControls(),this.availableSeats=[],this.seatOrderPreference=seatOrderPreference}updateGridControls(){let numberOfPagingControls=document.getElementsByClassName("GridFooter---inGridPagingControl").length,firstElementIndex=4==numberOfPagingControls?0:null,firstElement=null==firstElementIndex?void 0:document.getElementsByClassName("GridFooter---inGridPagingControl")[firstElementIndex],previousElementIndex=4==numberOfPagingControls?1:2==numberOfPagingControls?0:null,previousElement=null==previousElementIndex?void 0:document.getElementsByClassName("GridFooter---inGridPagingControl")[previousElementIndex],nextElementIndex=4==numberOfPagingControls?2:2==numberOfPagingControls?1:null,nextElement=null==nextElementIndex?void 0:document.getElementsByClassName("GridFooter---inGridPagingControl")[nextElementIndex],lastElementIndex=4==numberOfPagingControls?3:null,lastElement=null==lastElementIndex?void 0:document.getElementsByClassName("GridFooter---inGridPagingControl")[lastElementIndex];this.gridControls={first:{element:null==firstElement?null:firstElement,isActive:null!=firstElement&&"false"==firstElement.ariaDisabled},previous:{element:null==previousElement?null:previousElement,isActive:null!=previousElement&&"false"==previousElement.ariaDisabled},next:{element:null==nextElement?null:nextElement,isActive:null!=nextElement&&"false"==nextElement.ariaDisabled},last:{element:null==lastElement?null:lastElement,isActive:null!=lastElement&&"false"==lastElement.ariaDisabled}}}async getTableData(){do{this.updateGridControls();let tableData=document.getElementsByTagName("td");for(let i=0;i<tableData.length;i++)this.availableSeats.push(tableData[i].innerText);this.gridControls.next.isActive&&await this.pressTableNextButton()}while(1==this.gridControls.next.isActive)}pickSeat(){for(let i=0;i<this.seatOrderPreference.length;i++){const preference=this.seatOrderPreference[i];if(this.availableSeats.includes(preference))return preference}return null}async selectTheChosenSeat(chosenSeat){this.updateGridControls(),1==this.gridControls.first.isActive?await this.pressTableFirstButton():this.gridControls.previous.isActive&&await this.pressTablePreviousButton();do{this.updateGridControls();let tableData=document.getElementsByTagName("td");for(let i=0;i<tableData.length;i++)if(tableData[i].innerText==chosenSeat)return tableData[i].click(),!0;await this.pressTableNextButton()}while(1==this.gridControls.next.isActive);return!1}async pressTableFirstButton(){await this.pressPagingControls("first")}async pressTablePreviousButton(){await this.pressPagingControls("previous")}async pressTableNextButton(){await this.pressPagingControls("next")}async pressTableLastButton(){await this.pressPagingControls("last")}async pressPagingControls(button){this.gridControls[button].element.click(),await waitForAllRequestedResolved()}async clickPeriodMenu(dropdownMenu){dropdownMenu.click(),await waitForAllRequestedResolved(1e3)}async pressReserveButton(){let buttons=document.getElementsByTagName("button");for(let i=0;i<buttons.length;i++)if("RESERVE"==buttons[i].innerText)return buttons[i].click(),void await waitForAllRequestedResolved()}}const arePendingRequests=()=>new Promise((resolve,reject)=>{const xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){xhr.readyState===XMLHttpRequest.DONE&&(xhr.status>=200&&xhr.status<300?resolve(!1):resolve(!0))},xhr.open("GET","/"),xhr.send()}),isLoadingBarShowing=()=>{let loadingBar=document.getElementById("appian-nprogress");if(null==loadingBar)return!1;let loadingBarChildren=loadingBar.children;return null!=loadingBarChildren&&loadingBarChildren[0].offsetHeight>0},waitForAllRequestedResolved=async()=>{await delay(3e3);let loadingBarShowing=isLoadingBarShowing(),hasPendingRequests=await arePendingRequests();for(;1==hasPendingRequests||1==loadingBarShowing;)await delay(1e3),hasPendingRequests=await arePendingRequests(),loadingBarShowing=isLoadingBarShowing()},delay=(ms=1e4)=>new Promise(resolve=>setTimeout(resolve,ms)),signupProcess=async()=>{let signupPage=new SignUpPage(seatOrderPreference);await signupPage.getTableData();let chosenSeat=signupPage.pickSeat(),selectionSuccessful;return 1==await signupPage.selectTheChosenSeat(chosenSeat)},getDates=()=>{const getMonthNumber=code=>{switch(code){case"Jan":return 1;case"Feb":return 2;case"Mar":return 3;case"Apr":return 4;case"May":return 5;case"Jun":return 6;case"Jul":return 7;case"Aug":return 8;case"Sep":return 9;case"Oct":return 10;case"Nov":return 11;case"Dev":return 12}};let weekDateTexts=[];for(let i=0;i<document.getElementsByClassName("SizedText---medium SizedText---predefined").length;i++){let text=document.getElementsByClassName("SizedText---medium SizedText---predefined")[i].innerText;const datePattern=/^(Mon|Tue|Wed|Thu|Fri)/;1==datePattern.test(text)&&weekDateTexts.push(text)}let dates=[];for(let i=0;i<weekDateTexts.length;i++){let text=weekDateTexts[i],dayNumber=text.match(/\d+/g)[0],month,monthNumber=getMonthNumber(text.slice(-3)),year,date=new Date(`${2024}-${monthNumber}-${dayNumber}`);dates.push(date)}return dates},firstWantedDateButtonIndex=()=>{},stepOne=async()=>{document.title="Processing...";let homepage=new HomePage;await waitForAllRequestedResolved();for(let i=0;i<homepage.maxPages;i++){let dates=getDates();if(homepage.updateActiveSignupButtons(),1==homepage.pageHasSignUpButtons())return homepage.pressSignUpButton(),await waitForAllRequestedResolved(),await signupProcess(),void(document.title="Waiting for user...");homepage.pressRightArrow(),await waitForAllRequestedResolved()}document.title="Close tab"},proceed=async()=>{document.title="Processing...";let signupPage=new SignUpPage(seatOrderPreference);await signupPage.pressReserveButton(),stepOne()};fetch("https://raw.githubusercontent.com/jdunsmuir/AutomatedSignup/main/seatingPreferences.json").then(response=>response.text()).then(text=>{let jsonValue=JSON.parse(text);seatOrderPreference=jsonValue.john,stepOne()}).catch(error=>console.error("There was a problem with the fetch operation:",error));